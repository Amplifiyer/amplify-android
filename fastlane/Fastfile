RELEASE_TAG_PREFIX = 'release_v'
default_platform(:android)

platform :android do
  desc "Create a pre-release version by pushing a tag to GitHub, and publishing to Maven"
  lane :unstable do 
    next_version = calculate_next_canary_version({
        :release_tag_prefix => RELEASE_TAG_PREFIX,
        :release_tag_type => 'annotated'
      }
    )

    UI.message("Releasing unstable version: #{next_version}")

    # Update version information in gradle.properties
    increment_versions(version: next_version)

    gradle(
      task: "assemble",
      build_type: "Release"
    )

    # # Create tag and push to origin
    add_tag(version: RELEASE_TAG_PREFIX + next_version.to_s)

    # # Push to maven
    UI.message("Pushing #{next_version.to_s} to maven")
    publish_to_maven
  end

  desc "Create a release version by building and committing a changelog, pushing a tag to GitHub, and publishing to Maven"  
  lane :release do
    # next_version, commits = calculate_next_release_version

    # UI.message("Releasing version: #{next_version}")

    # Increment all specs and plists
    # increment_versions(version: next_version)

    # changelog = build_changelog(version: next_version, commits: commits)

    # write_changelog(changelog: changelog, path: 'CHANGELOG.md')

    # Commit and push 
    # release_commit(version: next_version)

    # Create tag and push to origin
    # add_tag(version: next_version)

    # Push to maven
    # UI.message("Pushing release to maven")
  end

  desc "Increment versions"
  private_lane :increment_versions do |options|
    version = options[:version].to_s
    segments = options[:version].segments
    prerelease = options[:version].prerelease.nil? ? 0 : options[:version].prerelease.to_i

    # Derive the version code from version segements and pre-release number (if applicable)
    version_code = segments[0] * 100000 + segments[1] * 1000 + segments[2] * 10 + prerelease

    UI.message("Updating versionName and versionCode in gradle.properties")

    set_key_value(file: 'gradle.properties', key: 'VERSION_NAME', value: version)
    set_key_value(file: 'gradle.properties', key: 'VERSION_CODE', value: version_code.to_s)

  end

  desc "Tag in git and push to GitHub"
  private_lane :add_tag do |options|
    next_version = options[:version]

    add_git_tag(tag: next_version)
    # push_git_tags(tag: next_version)
  end

  desc "Publish release to maven"
  private_lane :publish_to_maven do |options|
    # Publishing to mavenLocal to test
    gradle(
      task: "publishToMavenLocal"
    )
  end
end
